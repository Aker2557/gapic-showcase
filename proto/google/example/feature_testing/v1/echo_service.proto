// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/rpc/status.proto";

package google.example.feature_testing.v1;

// A service used to test a client generated by the googleapis
// gapic-generator. This service is used to test unary methods, server-side
// streaming methods, client-side streaming methods, and bidirectional
// streaming methdos.
service EchoService {
  // A method used to test unary methods. This method will return the message
  // that was given.
  rpc Echo(EchoRequest) returns (EchoResponse) {}

  // A method used to test server-side streaming methods. This method will
  // split the given content into words and will pass each word back through
  // the stream.
  rpc Expand(ExpandRequest) returns (stream EchoResponse) {}

  // A method used to test client-side streaming methods. This method will
  // collect the contents given to it. When the stream is closed by the client,
  // this method will return the a concatenation of the strings passed to it.
  rpc Collect(stream EchoRequest) returns (EchoResponse) {}

  // A method that will be used to test bidirectional streaming methods. Upon
  // receiving a request on the stream, the same content will be passed back
  // on the stream.
  rpc Chat(stream EchoRequest) returns (stream EchoResponse) {}
}

// The request message used for the Echo, Collect and Chat methods. If content
// is set in this message then the request will succeed. If a status is 
message EchoRequest {
  oneof response {
    // The content to be echoed by the server.
    string content = 1;

    // The error to be thrown by the server.
    google.rpc.Status error = 2;
  }
}

// The response message for the EchoService methods.
message EchoResponse {
  // The content specified in the request.
  string content = 1;
}

// The request message for the Expand method.
message ExpandRequest {
  // The content that will be split into words and returned on the stream.
  string content = 1;

  // The error that is thrown after all words are sent on the stream.
  google.rpc.Status error = 2;
}


